!function(t){var n={};function e(o){if(n[o])return n[o].exports;var i=n[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:o})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var i in t)e.d(o,i,function(n){return t[n]}.bind(null,i));return o},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(t,n,e){const o=e(1);async function i(){const t=await async function(){const t=await fetch("https://github.com/owid/covid-19-data/raw/master/public/data/vaccinations/vaccinations.json"),n=t.headers.get("server");if([530,503,502,403,400].includes(t.status)&&("cloudflare"===n||!n))return generateJSONResponse({error:`Status ${t.status} requesting ${url}`},pretty);const e=await t.json();console.log(e[0]),console.log(e[0].data.length-1);let o=[];for(country of e)o.push({country:country.country,iso_code:country.iso_code,...country.data[country.data.length-1]});return o}();return await vaccination_KV.put("vaccinationWorldData",JSON.stringify(t)),new Response(`Updated ${t.length} Countries`,{status:200})}async function r(t){const{searchParams:n}=new URL(t.url);console.log(n.toString());let e=[""];try{e=n.get("countries").split(",")}catch{}const o="true"==n.get("showCountryName"),i="Daily Increase"==n.get("showDailyIncrease");let r=await vaccination_KV.get("vaccinationWorldData",{type:"json"});console.log("ALL Countries Test"),console.log(e),r=function(t,n){if(""==n[0])return console.log("No Country Parameter"),t;let e=[];for(countryData of t)for(country of n)if(countryData.iso_code==country){e.push(countryData);break}return e}(r,e);const s={DEU:"i44344",DNK:"i44348",AFG:"i44986",AGO:"i44987",ARG:"i44988",ARM:"i44989",ABW:"i44990",AUS:"i44991",AUT:"i44992",BHS:"i44994",BHR:"i44995",BGD:"i44996",BEL:"i44997",BOL:"i44998",BWA:"i44999",BRA:"i45000",BGR:"i45001",CMR:"i45003",CAN:"i45004",CHL:"i45005",CHN:"i45006",COL:"i45007",HRV:"i45008",CZE:"i45009",ECU:"i45010",FIN:"i45011",FRA:"i45012",GAB:"i45013",HKG:"i45014",HUN:"i45015",ISL:"i45016",IND:"i45017",IDN:"i45018",IRL:"i45019",ISR:"i45020",ITA:"i45021",JPN:"i45022",LAO:"i45023",LIE:"i45024",LUX:"i45025",MAC:"i45026",MLI:"i45027",MEX:"i45028",MAR:"i45029",NAM:"i45030",NLD:"i45031",NZL:"i44991",NOR:"i45032",PER:"i45033",PHL:"i45034",POL:"i45035",RUS:"i45036",SLE:"i45037",SGP:"i45038",ESP:"i45039",SWE:"i45040",CHE:"i45041",TWN:"i45042",UKR:"i45043",GBR:"i44343",USA:"i45044",VNM:"i45045"};let c=[],u=[];for(vaccinationCountryData of r)try{u=[],o&&u.push({text:vaccinationCountryData.country,icon:s[vaccinationCountryData.iso_code]}),u.push({text:a(i?vaccinationCountryData.daily_vaccinations:vaccinationCountryData.people_vaccinated),duration:12e4,icon:s[vaccinationCountryData.iso_code],goalData:{start:0,current:vaccinationCountryData.people_vaccinated_per_hundred,end:100}}),console.log(u.length-1),null==u[u.length-1].icon||null==u[u.length-1].text||null==u[u.length-1].goalData.current||c.push(u)}catch{}for(touple of(c.sort(()=>Math.random()-.5),frames=[],c))frames.push(touple[0]),frames.push(touple[1]);return new Response(JSON.stringify({frames:frames}),{status:200})}function a(t){const n=String(t);return String(n.length>7?n.substr(0,n.length-6)+"."+n.substr(n.length-6,Math.max(11-n.length,0))+"m":n)}addEventListener("fetch",t=>{t.respondWith(async function(t){const n=new o;n.get(".*/get_data",()=>i()),n.post(".*/la_metric",t=>r(t)),n.get(".*/la_metric",t=>r(t));return await n.route(t)}(t.request))}),addEventListener("scheduled",t=>{t.waitUntil(i())})},function(t,n){const e=t=>n=>n.method.toLowerCase()===t.toLowerCase(),o=e("connect"),i=e("delete"),r=e("get"),a=e("head"),s=e("options"),c=e("patch"),u=e("post"),l=e("put"),d=e("trace"),h=t=>n=>{const e=new URL(n.url).pathname;return(e.match(t)||[])[0]===e};t.exports=class{constructor(){this.routes=[]}handle(t,n){return this.routes.push({conditions:t,handler:n}),this}connect(t,n){return this.handle([o,h(t)],n)}delete(t,n){return this.handle([i,h(t)],n)}get(t,n){return this.handle([r,h(t)],n)}head(t,n){return this.handle([a,h(t)],n)}options(t,n){return this.handle([s,h(t)],n)}patch(t,n){return this.handle([c,h(t)],n)}post(t,n){return this.handle([u,h(t)],n)}put(t,n){return this.handle([l,h(t)],n)}trace(t,n){return this.handle([d,h(t)],n)}all(t){return this.handle([],t)}route(t){const n=this.resolve(t);return n?n.handler(t):new Response("resource not found",{status:404,statusText:"not found",headers:{"content-type":"text/plain"}})}resolve(t){return this.routes.find(n=>!(n.conditions&&(!Array.isArray(n)||n.conditions.length))||("function"==typeof n.conditions?n.conditions(t):n.conditions.every(n=>n(t))))}}}]);