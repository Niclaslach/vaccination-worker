!function(t){var n={};function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:o})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(e.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var r in t)e.d(o,r,function(n){return t[n]}.bind(null,r));return o},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=0)}([function(t,n){function e(t){const n=String(t);return String(n.length>7?n.substr(0,n.length-6)+"."+n.substr(n.length-6,3)+"m":n)}addEventListener("fetch",t=>{t.respondWith(async function(t){const{searchParams:n}=new URL(t.url);console.log(n.get("countries"));const o=n.get("countries").split(",");var r=await async function(){const t=await fetch("https://github.com/owid/covid-19-data/raw/master/public/data/vaccinations/vaccinations.json"),n=t.headers.get("server");if([530,503,502,403,400].includes(t.status)&&("cloudflare"===n||!n))return generateJSONResponse({error:`Status ${t.status} requesting ${url}`},pretty);let e=await t.json();console.log(e[0]),console.log(e[0].data.length-1);let o=[];for(country of e)o.push({country:country.country,iso_code:country.iso_code,...country.data[country.data.length-1]});return o}();await vaccination_KV.put("vaccinationWorldData",JSON.stringify(r));let a=await vaccination_KV.get("vaccinationWorldData",{type:"json"});console.log(a),a=function(t,n){let e=[];for(countryData of t)for(country of n)if(countryData.iso_code==country){e.push(countryData);break}return e}(a,o);const c={DEU:"i44344",DNK:"i44348"};let i=[];for(vaccinationCountryData of a)try{i.push({text:e(vaccinationCountryData.people_vaccinated),duration:3e5,icon:c[vaccinationCountryData.iso_code],goalData:{start:0,current:vaccinationCountryData.people_vaccinated_per_hundred,end:100}})}catch{}return new Response(JSON.stringify({frames:i}),{status:200})}(t.request))})}]);