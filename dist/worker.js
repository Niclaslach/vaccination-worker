!function(t){var e={};function n(o){if(e[o])return e[o].exports;var r=e[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)n.d(o,r,function(e){return t[e]}.bind(null,r));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){const o=n(1);async function r(){const t=await async function(){const t=await fetch("https://github.com/owid/covid-19-data/raw/master/public/data/vaccinations/vaccinations.json"),e=t.headers.get("server");if([530,503,502,403,400].includes(t.status)&&("cloudflare"===e||!e))return generateJSONResponse({error:`Status ${t.status} requesting ${url}`},pretty);const n=await t.json();console.log(n[0]),console.log(n[0].data.length-1);let o=[];for(country of n)o.push({country:country.country,iso_code:country.iso_code,...country.data[country.data.length-1]});return o}();return await vaccination_KV.put("vaccinationWorldData",JSON.stringify(t)),new Response(`Updated ${t.length} Countries`,{status:200})}async function i(t){const{searchParams:e}=new URL(t.url);console.log(e.get("countries"));let n=[];try{n=e.get("countries").split(",")}catch{}let o=await vaccination_KV.get("vaccinationWorldData",{type:"json"});console.log("ALL Countries Test"),console.log(n),o=function(t,e){if(0==e.length)return t;let n=[];for(countryData of t)for(country of e)if(countryData.iso_code==country){n.push(countryData);break}return n}(o,n);const r={DEU:"i44344",DNK:"i44348",AFG:"i44986",AGO:"i44987",ARG:"i44988",ARM:"i44989",ABW:"i44990",AUS:"i44991",AUT:"i44992",BHS:"i44994",BHR:"i44995",BGD:"i44996",BEL:"i44997",BOL:"i44998",BWA:"i44999",BRA:"i45000",BGR:"i45001",CMR:"i45003",CAN:"i45004",CHL:"i45005",CHN:"i45006",COL:"i45007",HRV:"i45008",CZE:"i45009",ECU:"i45010",FIN:"i45011",FRA:"i45012",GAB:"i45013",HKG:"i45014",HUN:"i45015",ISL:"i45016",IND:"i45017",IDN:"i45018",IRL:"i45019",ISR:"i45020",ITA:"i45021",JPN:"i45022",LAO:"i45023",LIE:"i45024",LUX:"i45025",MAC:"i45026",MLI:"i45027",MEX:"i45028",MAR:"i45029",NAM:"i45030",NLD:"i45031",NZL:"i44991",NOR:"i45032",PER:"i45033",PHL:"i45034",POL:"i45035",RUS:"i45036",SLE:"i45037",SGP:"i45038",ESP:"i45039",SWE:"i45040",CHE:"i45041",TWN:"i45042",UKR:"i45043",GBR:"i44343",USA:"i45044",VNM:"i45045"};let i=[],s=[];for(vaccinationCountryData of o)try{if(s.push({text:vaccinationCountryData.country,icon:r[vaccinationCountryData.iso_code]}),s.push({text:a(vaccinationCountryData.people_vaccinated),duration:12e4,icon:r[vaccinationCountryData.iso_code],goalData:{start:0,current:vaccinationCountryData.people_vaccinated_per_hundred,end:100}}),null==s[1].icon||null==s[1].text||null==s[1].goalData.current)throw new Error;i.push(s),s=[]}catch{}for(touple of(i.sort(()=>Math.random()-.5),frames=[],i))frames.push(touple[0]),frames.push(touple[1]);return new Response(JSON.stringify({frames:frames}),{status:200})}function a(t){const e=String(t);return String(e.length>7?e.substr(0,e.length-6)+"."+e.substr(e.length-6,3)+"m":e)}addEventListener("fetch",t=>{t.respondWith(async function(t){const e=new o;e.get(".*/get_data",()=>r()),e.post(".*/la_metric",t=>i(t)),e.get(".*/la_metric",t=>i(t));return await e.route(t)}(t.request))}),addEventListener("scheduled",t=>{t.waitUntil(r())})},function(t,e){const n=t=>e=>e.method.toLowerCase()===t.toLowerCase(),o=n("connect"),r=n("delete"),i=n("get"),a=n("head"),s=n("options"),c=n("patch"),u=n("post"),l=n("put"),d=n("trace"),h=t=>e=>{const n=new URL(e.url).pathname;return(n.match(t)||[])[0]===n};t.exports=class{constructor(){this.routes=[]}handle(t,e){return this.routes.push({conditions:t,handler:e}),this}connect(t,e){return this.handle([o,h(t)],e)}delete(t,e){return this.handle([r,h(t)],e)}get(t,e){return this.handle([i,h(t)],e)}head(t,e){return this.handle([a,h(t)],e)}options(t,e){return this.handle([s,h(t)],e)}patch(t,e){return this.handle([c,h(t)],e)}post(t,e){return this.handle([u,h(t)],e)}put(t,e){return this.handle([l,h(t)],e)}trace(t,e){return this.handle([d,h(t)],e)}all(t){return this.handle([],t)}route(t){const e=this.resolve(t);return e?e.handler(t):new Response("resource not found",{status:404,statusText:"not found",headers:{"content-type":"text/plain"}})}resolve(t){return this.routes.find(e=>!(e.conditions&&(!Array.isArray(e)||e.conditions.length))||("function"==typeof e.conditions?e.conditions(t):e.conditions.every(e=>e(t))))}}}]);